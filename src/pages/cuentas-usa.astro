---
import NavBar from '../components/Menu/NavBar';
import Layout from '../layouts/Layout.astro';

const accounts = [
  {
    name: 'Takenos',
    logo: 'https://ik.imagekit.io/ferminrp/Takenos%20logo.jpeg?updatedAt=1709119639419',
    url: 'https://app.takenos.com/referral?referral=3019da20-6746-4f43-81ba-a489cd833a0d',
    attributes: {
      'Comisión por recibir': '0%',
      'Comisión por extraer': '3%',
      'Cuenta USA a tu nombre': true,
      'Retiros en pesos': true,
      'Retiros Crypto': true,
      Rendimientos: false,
      'Tarjeta Virtual': false,
      'Tarjeta Física': false,
    },
  },
  {
    name: 'Dolarapp',
    logo: 'https://ik.imagekit.io/ferminrp/dolarapp.png?updatedAt=1709130134048',
    url: 'https://www.dolarapp.com/referrals/ar_referral?referralCode=ferminrp_W8d',
    attributes: {
      'Comisión por recibir': 'US$ 3',
      'Comisión por extraer': '0%',
      'Cuenta USA a tu nombre': true,
      'Retiros en pesos': true,
      'Tarjeta Virtual': true,
      'Tarjeta Física': true,
      'Retiros Crypto': false,
    },
    subscription: {
      Costo: 'US$ 6,99',
      Rendimientos: '4,00%',
      Cashback: '1,00%',
    },
  },
  {
    name: 'Grabrfi',
    logo: 'https://ik.imagekit.io/ferminrp/grabrfi.jpeg?updatedAt=1709138465494',
    url: 'https://www.grabrfi.com/es',
    attributes: {
      'Comisión por recibir': '0%',
      'Comisión por extraer': '0%',
      'Cuenta USA a tu nombre': true,
      'Retiros en pesos': false,
      Rendimientos: false,
      'Tarjeta Virtual': false,
      'Tarjeta Física': false,
      'Retiros Crypto': false,
    },
  },
  {
    name: 'Ripio',
    logo: 'https://ik.imagekit.io/ferminrp/ripio.jpg?updatedAt=1709314985547',
    url: 'https://join.ripio.com/ref/fermin_r_0',
    attributes: {
      'Comisión por recibir': 'US$0,50 + 1,50%',
      'Comisión por extraer': '0%',
      Rendimientos: '2,00%',
      'Cuenta USA a tu nombre': true,
      'Retiros en pesos': true,
      'Tarjeta Virtual': true,
      'Tarjeta Física': true,
      'Retiros Crypto': true,
    },
  } /* OCULTADO HASTA QUE VUELVAN A ABRIR CUENTAS
  {
    name: 'Utoppia',
    logo: 'https://ik.imagekit.io/ferminrp/utoppia.png?updatedAt=1709121463821',
    url: 'https://www.utoppia.com/',
    attributes: {
      'Comisión por recibir': '0%',
      'Comisión por extraer': '0%',
      'Cuenta USA a tu nombre': true,
      'Tarjeta Virtual': true,
      'Tarjeta Física': false,
      'Retiros en pesos': false,
      'Retiros Crypto': false
    },
    subscription: {
      Costo: 'US$ 4,99',
      Rendimientos: '4,50%'
    }
  }
  */,
];

const booleanToSVG = (value) =>
  value
    ? '<svg width="20" height="20" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0ZM8 15l-5-5 1.41-1.41L8 12.17l7.59-7.59L17 6l-9 9Z" fill="#22C55E"/></svg>'
    : '<svg width="20" height="20" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M10 0C4.47 0 0 4.47 0 10s4.47 10 10 10 10-4.47 10-10S15.53 0 10 0Zm5 13.59L13.59 15 10 11.41 6.41 15 5 13.59 8.59 10 5 6.41 6.41 5 10 8.59 13.59 5 15 6.41 11.41 10 15 13.59Z" fill="#E73737"/></svg>';
---

<Layout
  title='Cuentas para Freelancers'
  metaDescription='Compara las distintas opciones para cobrar afuera.'
  metaKeywords='Cuenta en dolares, freelancer, comparar comisiones, traer dolares, cobrar en dolares, pesos a dolares'
  metaImage='https://comparatasas.ar/images/cuentas-usa.png'
>
  <NavBar pathname='/cuentas-usa' client:load />
  <div
    class='container mx-auto my-6 w-full max-w-screen-lg sm:max-w-sm sm:px-4 md:max-w-md lg:max-w-lg'
  >
    <h1 class='my-6 text-3xl font-bold text-gray-900 dark:text-gray-100'>
      Compara las mejores opciones para <span class='text-indigo-500'
        >cobrar afuera</span
      >
    </h1>
    {
      accounts.map((account) => (
        <div class='my-6 overflow-x-auto'>
          <div class='flex items-center justify-between gap-2 rounded p-4 pb-4 dark:text-gray-100'>
            <div class='flex items-center gap-3'>
              <img
                class='h-8 w-8 rounded-full'
                src={account.logo + '?tr=w-32,h-32,f_webp'}
                alt={account.name}
                width='32'
                height='32'
              />
              <h3 class='text-xl font-bold'>{account.name}</h3>
            </div>
            <a
              class='text-indigo-500 underline underline-offset-2'
              href={account.url}
            >
              Visitar Sitio
            </a>
          </div>
          <div class='!rounded-lg bg-gray-50 px-2 dark:bg-slate-900'>
            <table class='w-full table-auto border-collapse bg-gray-50  dark:bg-slate-900 dark:text-gray-200'>
              <thead>
                <tr>
                  <th class='px-4 py-4 text-left font-semibold'>Plan</th>
                  <th class='px-4 py-4 text-right font-semibold'>Gratis</th>
                  {account.subscription && (
                    <th class='px-4 py-2 text-right'>Pago</th>
                  )}
                </tr>
              </thead>
              <tbody class='px-4'>
                {Object.entries(account.attributes).map(([key, value]) => (
                  <tr>
                    <td class='border-b border-gray-300 px-4 py-4'>{key} </td>
                    <td class='border-b border-gray-300 px-4 py-4 text-right'>
                      <span
                        class='flex justify-end'
                        set:html={
                          typeof value === 'boolean'
                            ? booleanToSVG(value)
                            : value
                        }
                      />
                    </td>
                    {account.subscription && (
                      <td class='border-b border-gray-300 px-4 py-4 text-right'>
                        <span
                          class='flex justify-end'
                          set:html={
                            typeof value === 'boolean'
                              ? booleanToSVG(value)
                              : value
                          }
                        />
                      </td>
                    )}
                  </tr>
                ))}
                {account.subscription ? (
                  <div>
                    {Object.entries(account.subscription).map(
                      ([key, value]) => (
                        <tr>
                          <td class='border-b border-gray-300 px-4 py-4'>
                            {key}
                          </td>
                          <td class='border-b border-gray-300 px-4 py-4 text-right'>
                            <span class='flex justify-end'>
                              <svg
                                width='20'
                                height='20'
                                fill='none'
                                xmlns='http://www.w3.org/2000/svg'
                              >
                                <path
                                  d='M10 0C4.47 0 0 4.47 0 10s4.47 10 10 10 10-4.47 10-10S15.53 0 10 0Zm5 13.59L13.59 15 10 11.41 6.41 15 5 13.59 8.59 10 5 6.41 6.41 5 10 8.59 13.59 5 15 6.41 11.41 10 15 13.59Z'
                                  fill='#E73737'
                                />
                              </svg>
                            </span>
                          </td>
                          <td class='border-b border-gray-300 px-4 py-4 text-right'>
                            {value}
                          </td>
                        </tr>
                      ),
                    )}
                  </div>
                ) : null}
              </tbody>
            </table>
          </div>
        </div>
      ))
    }
  </div>
</Layout>

<style>
  table tr:last-child td {
    border-bottom: 0 !important;
  }
</style>
